/*
利用进栈和出栈完成
*/

package String;

import java.util.Stack;

public class Compression {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		String str = "abbccddaaa";
		System.out.println(solution(str));
	}
	
	
	public static String solution(String str)
	{
		Stack<Character> stack = new Stack();
		int count=0;
		String out = "";
		for(int i=0;i<str.length();i++)
		{
			char a = str.charAt(i);
			//if the stack is empty  psuh the first into stack
			if(stack.isEmpty()) 
				{
					count++;
					stack.push(a);
				}
			else {
				//otherwise compare the top with the new char
				char top = stack.pop();				
				if(top == a){
					//如果相等就把2个都推入栈中，个数＋1
					stack.push(top);
					stack.push(a);
					count++;
				}else{//如果不相等就输出 把count重置为0
					out +=top;
					out += count+"";
					stack.push(a);
					count =1;
				}
			}
			
		}

		char top = stack.pop();
		out += top;
		out += count+"";
		return out;
	}

}
